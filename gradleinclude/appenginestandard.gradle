// This file is part of https://github.com/wtanaka/gradleinclude
// Copyright (C) 2019 Wesley Tanaka <https://wtanaka.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.1.0'
    }

}

// App Engine Standard Plugin requires war plugin
apply plugin: 'war'
// App Engine tasks
// Does not automatically detect "standard"
// https://github.com/GoogleCloudPlatform/app-gradle-plugin/issues/125
// apply plugin: com.google.cloud.tools.gradle.appengine.AppEnginePlugin
apply plugin: com.google.cloud.tools.gradle.appengine.standard.AppEngineStandardPlugin

repositories {   // repositories for Jar's you access in your code
    mavenCentral()
}


dependencies {
    compile 'com.google.appengine:appengine-api-1.0-sdk:+'
    compile 'javax.jdo:jdo-api:3.0.1'
    compile 'org.datanucleus:datanucleus-api-jdo:3.1.3'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.33'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'com.google.appengine:appengine-testing:+'
    testCompile 'com.google.appengine:appengine-api-stubs:+'
    testCompile 'com.google.appengine:appengine-tools-sdk:+'
}

// Always run unit tests
appengineDeploy.dependsOn test
appengineStage.dependsOn test

def gitVersionPlugin = plugins.find {
    it.getProperties().get("class").getName() ==
            "com.palantir.gradle.gitversion.GitVersionPlugin"
}
if (gitVersionPlugin) {
    def appengineVersion = gitVersion().replace(".", "-")
    appengine.deploy.version = appengineVersion
}

appengine.run.jvmFlags = ["-Xdebug"]

// Example of overriding deploy parameters
//appengine.deploy.projectId = "gitinclude"
