// This file is part of https://github.com/wtanaka/gradleinclude
// Copyright (C) 2019 Wesley Tanaka <https://wtanaka.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// https://github.com/cretz/pb-and-k

project.ext.pbandk_version = '0.3.0'

apply from: project(':gradleinclude').projectDir.path + '/proto.gradle'

repositories {
    // per https://stackoverflow.com/a/34327202/2034423
    ivy {
        url 'https://repo1.maven.org/maven2/com/github/cretz/'
        layout 'pattern', {
            m2compatible = true
            artifact '/[organisation]/[module]/[revision]/[module]-[revision].[ext]'
//            artifact '/[organisation]/[module]/[artifact]/[revision]/[artifact](-[revision]).[ext]'
//            addArtifactPattern "http://repo1.maven.org/maven2/[organisation]/[module]/[revision]/[artifact](-[revision])-jdk15.[ext]"
//            addArtifactPattern "http://repo1.maven.org/maven2/[organisation]/[artifact]/[revision]/[artifact](-[revision])-jdk15.[ext]"
        }
    }
}

dependencies {
    compile "com.github.cretz.pbandk:pbandk-runtime-jvm:$pbandk_version"

    // Downloads pbandk binary into gradle cache
    // per https://stackoverflow.com/a/34327202/2034423
    // https://repo1.maven.org/maven2/com/github/cretz/pbandk/
    // This maps to the pattern:
    // [organisation]:[module]:[revision]:[classifier]@[ext]
    compile "com.github.cretz.pbandk:protoc-gen-kotlin-jvm:$pbandk_version@zip"
}

// copies pbandk binary jar into local subdirectory
// https://stackoverflow.com/a/26698161/2034423
task copyDependencies(type: Copy) {
    from project.configurations.compile
    into "$buildDir/dependencies"
    include "**/protoc-gen-kotlin-jvm-${pbandk_version}.zip"
}

task protocGenKotlin(type: Copy) {
    def zipFile = file(
            "$buildDir/dependencies/protoc-gen-kotlin-jvm-${pbandk_version}.zip")
    def outDir = file("$buildDir")

    from zipTree(zipFile)
    into outDir

    dependsOn(copyDependencies)
}

allprojects {
}

pluginManager.withPlugin("com.google.protobuf") {
    // Make sure protoc-gen-kotlin exists before running
    // generateProto
    afterEvaluate {
        generateProto.dependsOn protocGenKotlin
    }
    protobuf {
        plugins {
            // Configure the kotlin code generator
            kotlin {
//                path = '/path/to/pbandk-0.7.2/' +
//                        'protoc-gen-kotlin/' +
//                        'protoc-gen-kotlin-jvm/' +
//                        'build/install/' +
//                        'protoc-gen-kotlin/bin/protoc-gen-kotlin'
//                path = "/path/to/" +
//                        "protoc-gen-kotlin-0.3.0/bin/" +
//                        "protoc-gen-kotlin"
                // Does not work, tries to download .exe which does not exist
//                artifact = 'com.github.cretz.pbandk:protoc-gen-kotlin-jvm:0.3.0'
                path = "$buildDir/protoc-gen-kotlin-$pbandk_version/bin" +
                        "/protoc-gen-kotlin"
// set path to that binary
            }
        }
        generateProtoTasks {
            all().each { task ->
                task.outputs.upToDateWhen { false }
/*
                task.builtins {
                    remove java
                }
                */
                task.plugins {
                    kotlin {
                        //option 'kotlin_package=go2k.compile.go.dumppb'
                    }
                }
            }
        }
    }
    sourceSets {
        main {
            proto {
                // In addition to the default 'src/main/proto'
                // This can get created if you add a dependency on another
                // subproject which contains .proto files
                srcDir "$buildDir/extracted-include-protos/main"
            }
            kotlin {
                srcDir "$buildDir/generated/source/proto/main/kotlin"
            }
        }
    }
}
